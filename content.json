[{"title":"nginx相关","date":"2019-04-09T09:04:45.000Z","path":"2019/04/09/nginx相关/","text":"1.负载均衡12345678910111213141516171819在http模块下添加upstream videoapi &#123; #weigth参数表示权值，权值越高被分配到的几率越大 server localhost:8080 weight=1; server localhost:8082 weight=2; &#125; 修改server &#123; listen 80; server_name videoapi.site; #反代 location / &#123; #访问http://videoapi proxy_pass http://videoapi; proxy_redirect default; &#125; &#125; 2.字符替换通过sub_filter 替换相应的字符之前想调试某个网站，但他加了反调试代码，通过我的服务器反代，删除代码，轻松解决12345location /video/playUrl &#123; proxy_pass http://localhost:8082/video/playUrl; #去除防debug sub_filter \"\\x73\\x65\\x74\\x49\\x6e\\x74\\x65\\x72\\x76\\x61\\x6c\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x7b\\x5f\\x30\\x78\\x31\\x63\\x38\\x66\\x36\\x63\\x28\\x29\\x7d\\x2c\\x34\\x30\\x30\\x30\\x29\\x3b\\x76\\x61\\x72\\x20\\x5f\\x30\\x78\\x31\\x63\\x38\\x66\\x36\\x63\\x3d\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x7b\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x20\\x5f\\x30\\x78\\x34\\x37\\x63\\x37\\x39\\x65\\x28\\x5f\\x30\\x78\\x35\\x39\\x65\\x62\\x31\\x39\\x29\\x7b\\x69\\x66\\x28\\x28\\x22\\x22\\x2b\\x5f\\x30\\x78\\x35\\x39\\x65\\x62\\x31\\x39\\x2f\\x5f\\x30\\x78\\x35\\x39\\x65\\x62\\x31\\x39\\x29\\x5b\\x22\\x6c\\x65\\x6e\\x67\\x74\\x68\\x22\\x5d\\x21\\x3d\\x3d\\x31\\x7c\\x7c\\x5f\\x30\\x78\\x35\\x39\\x65\\x62\\x31\\x39\\x25\\x32\\x30\\x3d\\x3d\\x3d\\x30\\x29\\x7b\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x7b\\x7d\\x5b\\x22\\x63\\x6f\\x6e\\x73\\x74\\x72\\x75\\x63\\x74\\x6f\\x72\\x22\\x5d\\x28\\x22\\x64\\x65\\x62\\x75\\x67\\x67\\x65\\x72\\x22\\x29\\x28\\x29\\x29\\x7d\\x65\\x6c\\x73\\x65\\x7b\\x28\\x66\\x75\\x6e\\x63\\x74\\x69\\x6f\\x6e\\x28\\x29\\x7b\\x7d\\x5b\\x22\\x63\\x6f\\x6e\\x73\\x74\\x72\\x75\\x63\\x74\\x6f\\x72\\x22\\x5d\\x28\\x22\\x64\\x65\\x62\\x75\\x67\\x67\\x65\\x72\\x22\\x29\\x28\\x29\\x29\\x7d\\x5f\\x30\\x78\\x34\\x37\\x63\\x37\\x39\\x65\\x28\\x2b\\x2b\\x5f\\x30\\x78\\x35\\x39\\x65\\x62\\x31\\x39\\x29\\x7d\\x74\\x72\\x79\\x7b\\x5f\\x30\\x78\\x34\\x37\\x63\\x37\\x39\\x65\\x28\\x30\\x29\\x7d\\x63\\x61\\x74\\x63\\x68\\x28\\x5f\\x30\\x78\\x32\\x62\\x66\\x38\\x38\\x61\\x29\\x7b\\x7d\\x7d\\x3b\\x5f\\x30\\x78\\x31\\x63\\x38\\x66\\x36\\x63\\x28\\x29\\x3b\" '';&#125; 3.以json返回网站目录下文件信息1234location /conf/ &#123; autoindex on; autoindex_format json;&#125;","tags":[{"name":"nginx","slug":"nginx","permalink":"/tags/nginx/"}]},{"title":"时间轮盘app实现","date":"2019-04-09T09:01:35.000Z","path":"2019/04/09/时间轮盘app实现/","text":"在mac上看到一款炫酷锁屏，所以按照自己的思路实现了其中一个效果，顺手码了个App，名为“时间轮盘”。“时间轮盘”包括动态壁纸和屏保功能。下载地址 实现效果 准备 实现 1.绘制轮盘 2.显示正确的时间 3.\b让我们的轮盘动起来 4.显示到壁纸 4.1添加壁纸权限 4.2实现壁纸服务 4.3添加my_wallpaper.xml 4.4添加服务到清单 4.5跳转设置壁纸 网页版轮盘 准备工欲善其事必先利其器，要实现功能首先需要了解相关技术栈。“时间轮盘”涉及到绘制，因此需要了解Canvas,Paint,Matrix相关Api。最终需要将绘制的图形展示到动态壁纸和屏保，因此需要分别继承WallpaperService和DreamService，并实现相关方法。 实现1.绘制轮盘实现程序绕不开绘制，因此我们先自定义一个View，重写onDraw()方法来实现轮盘的绘制。根据效果图分析，轮盘的环绕文字从内向外逐层显示，每一层显示一种具体时间字段。所以我们先实现一层（月份）绘制，接下的按照同样的方法进行绘制。 查阅文档，安卓关于文字绘制有以下方法 1234public void drawText (CharSequence text, int start, int end, float x,float y, Paint paint)public void drawText (String text, float x, float y, Paint paint)public void drawText (char[] text, int index, int count, float x, float y, Paint paint)public void drawText (String text, int start, int end, float x, float y, Paint paint) 我们只需要使用到 1public void drawText (String text, float x, float y, Paint paint) 首先我们现在原点进行绘制”一月”,那么我们如何将绘制内容移动到画布中央呢，这时候我们就需要用到Matrix，Matrix在图形绘制中起着重要的作用，通过Matrix我们可以实现图形的缩放，旋转，平移以及它们的组合效果。 \b先使用 1public boolean postTranslate(float dx, float dy) 进行平移，根据效果图我们发现绘制距离中点还有一定距离，我们仅需再向右平移一段距离，最后通过调用 1Canvas.setMatrix(Matrix matrix) 来应用Matrix，就可以愉快的绘制了。 接下来我们再绘制”二月”，和”一月”不同的是，”二月”相对于”一月”有一定的偏转角度，我们只要围绕画布中心点进行旋转就行了。 1public boolean postRotate(float degrees, float px, float py) 旋转角度为360/12=30,同理接下来的月份就好办了。 将代码封装下 12345678910111213141516171819202122232425262728293031323334private String[] months = &#123; \"壹\", \"贰\", \"仨\", \"肆\", \"伍\", \"陆\", \"柒\", \"捌\", \"玖\", \"拾\", \"拾壹\", \"拾贰\"&#125;;private void onDraw(Canvas canvas) &#123; drawText(canvas,40,months)&#125;/** * * @param canvas * @param radius 距中心距离 * @param strArray 轮盘文字数组 */private void drawText(Canvas canvas, float radius, String[] strArray) &#123; int width = canvas.getWidth(); int height = canvas.getHeight(); float addD = 360f / strArray.length; float degree = 0f; for (String str : strArray) &#123; //重置Matrix matrix.reset(); //平移Matrix matrix.postTranslate(width / 2, height / 2); matrix.postTranslate(radius, 0); //旋转Matrix matrix.postRotate(degree, width / 2, height / 2); //设置Matrix canvas.setMatrix(matrix); canvas.drawText(str, 0, 0, clockPaint); degree += addD; &#125;&#125; 通过以上代码，我们便能够实现一个静态的时间轮盘了。 2.显示正确的时间根据效果图我们知道，当前时间高亮显示，并且总是显示在右侧一行。我们需要\b将整个圆环进行旋转，一直转到\b当前时间。 \b首先我们通过调用Calendar\b\b的方法 1234567public int get(int field)Calendar.MONTHCalendar.DATECalendar.HOUR_OF_DAYCalendar.MINUTECalendar.SECOND 获取到\b\b\b月，日等时间字段，拿月示例，现在是四月，\b根据 1Calendar.get(Calendar.MONTH) 我们获取到的值3\b,我们只需要逆时针旋转(360/12)*3就能够将四月旋转到正确的位置，\b并且将其设置高亮色，其他同理。\b\b 3.\b让我们的轮盘动起来通过 (当前毫秒%1000/1000f) * 360 可以知道当前秒数的偏移量，在绘制的时候只要再加上这个偏移量，再通过一个定时器\b定时的执行重绘\b工作,便可以实现轮盘的转动了。 4.显示到壁纸4.1添加壁纸权限1&lt;uses-permission android:name=\"android.permission.SET_WALLPAPER\"/&gt; 4.2实现壁纸服务继承WallpaperService并实现onCreateEngine1234567891011121314151617181920212223242526272829303132override fun onCreateEngine(): WallpaperService.Engine &#123; return LiveWallpaperEngine()&#125;private inner class LiveWallpaperEngine : WallpaperService.Engine() &#123; override fun onSurfaceCreated(holder: SurfaceHolder) &#123; super.onSurfaceCreated(holder) //获取画布 val canvas = holder!!.lockCanvas() //绘制到画布 ... ... //显示到屏幕 holder!!.unlockCanvasAndPost(canvas) &#125; override fun onVisibilityChanged(visible: Boolean) &#123; super.onVisibilityChanged(visible) //为了省电，我们可以在壁纸不显示的时候，停止绘制线程 &#125; override fun onSurfaceChanged(holder: SurfaceHolder, format: Int, width: Int, height: Int) &#123; super.onSurfaceChanged(holder, format, width, height) //在屏幕旋转时调整画布大小 &#125; override fun onSurfaceDestroyed(holder: SurfaceHolder) &#123; super.onSurfaceDestroyed(holder) //销毁绘制线程 &#125;&#125; 4.3添加my_wallpaper.xml123&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;wallpaper xmlns:android=\"http://schemas.android.com/apk/res/android\" android:description=\"@string/app_name\" /&gt; 4.4添加服务到清单1234567891011&lt;service android:name=\".service.LiveWallPaperService\" android:permission=\"android.permission.BIND_WALLPAPER\"&gt; &lt;intent-filter&gt; &lt;action android:name=\"android.service.wallpaper.WallpaperService\"/&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=\"android.service.wallpaper\" android:resource=\"@xml/my_wallpaper\"/&gt;&lt;/service&gt; 4.5跳转设置壁纸12345Intent intent = new Intent();intent.setAction(WallpaperManager.ACTION_CHANGE_LIVE_WALLPAPER);intent.putExtra(WallpaperManager.EXTRA_LIVE_WALLPAPER_COMPONENT, new ComponentName(activity.getApplicationContext().getPackageName(), LiveWallPaperService.class.getCanonicalName()));activity.startActivityForResult(intent, requestCode); 网页版轮盘https://ghbhaha.github.io/DateTimewallpaper_Communication/editer.html","tags":[{"name":"android","slug":"android","permalink":"/tags/android/"},{"name":"canvas","slug":"canvas","permalink":"/tags/canvas/"},{"name":"matrix","slug":"matrix","permalink":"/tags/matrix/"}]},{"title":"linux下使用git push时免输入账号密码","date":"2015-02-27T16:00:00.000Z","path":"2015/02/28/linux下使用git-push时免输入账号密码/","text":"1.在~下，创建文件 .git-credentials, 用gedit编辑此文件：123suda@suda-Aspire-4750:~$cdsuda@suda-Aspire-4750:~$touch .git-credentialssuda@suda-Aspire-4750:~$gedit .git-credentials 然后输入:https://{username}:{password}@github.com例如:https://aoeddklj:1233ds@github.com2.在终端下执行1suda@suda-Aspire-4750:~$git config --global credential.helper store 3.查看~/.gitconfig是否会多了一项：12[credential]helper = store 如果存在，就不需要输入密码了 参考:http://weibo.com/p/1001603737697985379267?from=page_100505_profile&amp;wvr=6&amp;mod=wenzhangmod","tags":[{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"github","slug":"github","permalink":"/tags/github/"}]},{"title":"解决使用hexo的常见问题","date":"2015-01-24T16:00:00.000Z","path":"2015/01/25/解决使用hexo的常见问题/","text":"#1、Hexo无法解析模板文件 hexo cleanhexo generate 然后打开页面显示的是： 123456&lt;%- partial('_partial/head') %&gt;&lt;%- partial('_partial/header') %&gt;&lt;%- body %&gt;&lt;% if (theme.sidebar &amp;&amp; theme.sidebar !== 'bottom')&#123; %&gt; &lt;%- partial('_partial/sidebar') %&gt; &lt;% &#125; %&gt;&lt;%- partial('_partial/footer') %&gt;&lt;%- partial('_partial/mobile-nav') %&gt; &lt;%- partial('_partial/after-footer') %&gt; theme使用的是默认的landscape 解决方案： 在工程目录执行下面3个命令，高版本的hexo移除默认的ejs 123$ npm install hexo-renderer-ejs --save$ npm install hexo-renderer-stylus --save$ npm install hexo-renderer-marked --save #2、中文乱码 解决方案：将md文件和yml文件的格式设置为UTF-8","tags":[{"name":"hexo","slug":"hexo","permalink":"/tags/hexo/"}]},{"title":"如何去除gedit编辑文件时生成的备份文件","date":"2015-01-21T16:00:00.000Z","path":"2015/01/22/如何去除gedit编辑文件时生成的备份文件/","text":"ubuntu下使用gedit是个不错的选择，但每次编辑都会生成*～的备份文件，改的文件多了就会积累许多垃圾了，那么如何取消备份文件生成，或者批量删除这些文件呢？下面就给大家提供两个方法来解决这个问题 1.取消生成 打开gedit-首选项-编辑器-文件保存，将”在保存之前创建一个备份文件”勾选去掉 2.批量删除这类文件的方法如下： 1$ find / -name \"*~\" -print -exec rm -f &#123;&#125; \\;","tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"/tags/ubuntu/"},{"name":"gedit","slug":"gedit","permalink":"/tags/gedit/"}]},{"title":"为Github帐号添加SSH keys","date":"2015-01-19T16:00:00.000Z","path":"2015/01/20/为Github帐号添加SSH-keys/","text":"#一、创建SSH key1234$ ssh-keygen -t rsa -C \"your_email@example.com\"# Creates a new ssh key, using the provided email as a label# Generating public/private rsa key pair.# Enter file in which to save the key (/home/you/.ssh/id_rsa): 然后系统提示输入文件保存位置等信息,按提示填写回车123456789101112Enter passphrase (empty for no passphrase): [Type a passphrase]# Enter same passphrase again: [Type passphrase again]Your identification has been saved in /home/you/.ssh/id_rsa.# Your public key has been saved in /home/you/.ssh/id_rsa.pub.# The key fingerprint is:# 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com# start the ssh-agent in the background$ eval \"$(ssh-agent -s)\"# Agent pid 59566$ ssh-add ~/.ssh/id_rsa 生成的SSH key文件保存在中～/.ssh/id_rsa.pub文本编辑工具打开该文件：1$ gedit ~/.ssh/id_rsa.pub 接着拷贝.ssh/id_rsa.pub文件内的所有内容，将它粘帖到github帐号管理中的添加SSH key界面中。 #二、打开github帐号管理中的添加SSH key，步骤如下 登录github 点击右上方的Accounting settings图标 选择 SSH key 点击 Add SSH key 在出现的界面中填写SSH key的名称，填一个你自己喜欢的名称即可，然后将上面拷贝的~/.ssh/id_rsa.pub文件内容粘帖到key一栏，在点击“add key”按钮就可以了。 添加过程github会提示你输入一次你的github密码 添加完成后再次执行git clone就可以成功克隆github上的代码库了。 参考来源：https://help.github.com/articles/generating-ssh-keys/#platform-linuxhttp://blog.csdn.net/keyboardota/article/details/7603630","tags":[{"name":"github","slug":"github","permalink":"/tags/github/"},{"name":"ssh","slug":"ssh","permalink":"/tags/ssh/"}]},{"title":"Test","date":"2015-01-16T16:00:00.000Z","path":"2015/01/17/Test/","text":"这是一次测试","tags":[{"name":"Test","slug":"Test","permalink":"/tags/Test/"}]}]